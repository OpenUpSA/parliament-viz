---
import Layout from "../layouts/Layout.astro";
import data from "../data/bill-tracker.json";
import "../style/bill-tracker-events.scss";

// Sort bills by year
data.sort((a, b) => {
  return a.year - b.year;
});

// Add last house to events based on previous house if not present
data.forEach((bill) => {
  bill.events.forEach((event, index) => {
    if (!event.house) {
      event.house = bill.events.slice(0, index).reduce((house, event) => {
        return event.house || house;
      }, null);
    }
  });
});

// Add days since last event
data.forEach((bill) => {
  bill.events.forEach((event, index) => {
    if (index > 0) {
      const previousEvent = bill.events[index - 1];
      event.daysSinceLastEvent = Math.round(
        (new Date(event.date) - new Date(previousEvent.date)) /
          (1000 * 60 * 60 * 24)
      );
    }
  });
});

const billStatus = {
  lapsed: { short: "Lapsed", description: "Lapsed" },
  withdrawn: { short: "Withdrawn", description: "Withdrawn" },
  na: {
    short: "NA Consideration",
    description: "Under consideration by the National Assembly.",
  },
  ncop: {
    short: "NCOP Consideration",
    description: "Under consideration by the National Council of Provinces.",
  },
  enacted: {
    short: "Enacted",
    description: "The bill has been signed into law.",
  },
  "act-commenced": { short: "Act Commenced", description: "Act commenced" },
  "act-partly-commenced": {
    short: "Act Partly Commenced",
    description: "Act partially commenced",
  },
  president: {
    short: "Approved",
    description: "Approved by Parliament. Waiting to be signed into law.",
  },
  rejected: { short: "Rejected", description: "Rejected" },
  draft: { short: "Drafted", description: "Drafted" },
};

const eventUrl = (event, bill) => {
  switch (event.type) {
    case "bill-introduced":
      return `https://pmg.org.za/bill/${bill.id}/`;
    case "bill-passed":
      return `https://pmg.org.za/hansard/${event.id}/`;
    case "bill-signed":
      return `https://pmg.org.za/bill/${bill.id}/`;
    case "bill-act-commenced":
      return `https://pmg.org.za/bill/${bill.id}/`;
    case "bill-enacted":
      return `https://pmg.org.za/bill/${bill.id}/`;
    case "bill-updated":
      return `https://pmg.org.za/bill/${bill.id}/`;
    case "committee-meeting":
      return `https://pmg.org.za/committee-meeting/${event.id}/`;
    case "media-briefing":
      return `https://pmg.org.za/bill/${bill.id}/`;
    case "plenary":
      return `https://pmg.org.za/hansard/${event.id}/`;
    default:
      return `https://pmg.org.za/${event.type}/${event.id}/`;
  }
};
---

<Layout title="Bill Tracker">
  {
    data.map((bill, index) => (
      <div class="bill">
        {bill.events.map((event, index) => (
          <>
            {index != 0 && (
              <div
                class={`spacer spacer-${event.daysSinceLastEvent} event-house-${event.house}`}
                style={{ width: `${event.daysSinceLastEvent}px` }}
                title={`${event.daysSinceLastEvent} days since last event`}
              />
            )}
            <a
              href={eventUrl(event, bill)}
              target="_blank"
              class={`event event-house-${event.house}`}
              title={`(${event.house}) ${event.type}: ${event.title} - ${new Date(event.date).toLocaleDateString()}`}
            />
          </>
        ))}
        <a
          href={`https://pmg.org.za/bill/${bill.id}/`}
          target="_blank"
          class={`bill-status bill-status-${bill.status} event-count-${bill.events.length}`}
          title={billStatus[bill.status]["description"]}
        >
          {billStatus[bill.status]["short"]}
        </a>
      </div>
    ))
  }
</Layout>
